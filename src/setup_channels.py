#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–∏—á–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
"""

import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
current_dir = os.path.dirname(os.path.abspath(__file__))  # src/
project_root = os.path.dirname(current_dir)  # –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞
sys.path.insert(0, project_root)

from src.db_manager import Database
from src.youtube_api import YouTubeAPI, setup_new_channel


COLORS = [
    '#3b82f6',  # Blue
    '#ef4444',  # Red
    '#10b981',  # Green
    '#f59e0b',  # Amber
    '#8b5cf6',  # Purple
    '#ec4899',  # Pink
    '#06b6d4',  # Cyan
    '#84cc16',  # Lime
    '#f97316',  # Orange
    '#6366f1',  # Indigo
    '#14b8a6',  # Teal
    '#a855f7',  # Violet
]


def main():
    print("=" * 60)
    print("YouTube Dashboard - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–∏—á–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ credentials
    credentials_file = 'config/client_secrets.json'
    if not os.path.exists(credentials_file):
        print("\n‚ùå –û–®–ò–ë–ö–ê: –§–∞–π–ª client_secrets.json –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("\n–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:")
        print("1. –ó–∞–π—Ç–∏ –≤ Google Cloud Console: https://console.cloud.google.com/")
        print("2. –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π")
        print("3. –í–∫–ª—é—á–∏—Ç—å YouTube Data API v3")
        print("4. –°–æ–∑–¥–∞—Ç—å OAuth 2.0 credentials (Desktop app)")
        print("5. –°–∫–∞—á–∞—Ç—å JSON —Ñ–∞–π–ª –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–∫ 'config/client_secrets.json'")
        print("\n–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: https://developers.google.com/youtube/v3/quickstart/python")
        sys.exit(1)
    
    # –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    os.makedirs('config/youtube_credentials', exist_ok=True)
    os.makedirs('database', exist_ok=True)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
    db = Database()
    
    print("\n–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞.")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–∞–Ω–∞–ª—ã
    existing_channels = db.get_all_personal_channels()
    if existing_channels:
        print(f"\nüì∫ –ù–∞–π–¥–µ–Ω–æ {len(existing_channels)} –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤:")
        for ch in existing_channels:
            print(f"  - {ch['name']} (ID: {ch['id']})")
        
        print("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print("1. –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª")
        print("2. –û–±–Ω–æ–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–∞–Ω–∞–ª—ã")
        print("3. –í—ã—Ö–æ–¥")
        
        choice = input("\n–í–∞—à –≤—ã–±–æ—Ä (1-3): ").strip()
        
        if choice == '3':
            sys.exit(0)
        elif choice == '2':
            update_existing_channels(db, existing_channels)
            return
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
    add_new_channels(db)


def add_new_channels(db: Database):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –ª–∏—á–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤"""
    print("\n" + "=" * 60)
    print("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –ª–∏—á–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤")
    print("=" * 60)
    
    print("\n–°–∫–æ–ª—å–∫–æ –ª–∏—á–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å?")
    print("(–£ –≤–∞—Å 12 –∫–∞–Ω–∞–ª–æ–≤, –Ω–æ –∞–∫—Ç–∏–≤–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ 7)")
    
    try:
        count = int(input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–Ω–∞–ª–æ–≤: ").strip())
    except ValueError:
        print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ")
        return
    
    if count <= 0 or count > 20:
        print("‚ùå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 20")
        return
    
    channels_data = []
    
    for i in range(count):
        print(f"\n{'=' * 60}")
        print(f"–ö–∞–Ω–∞–ª {i + 1} –∏–∑ {count}")
        print('=' * 60)
        
        name = input(f"–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', '–ú—É–∑—ã–∫–∞'): ").strip()
        if not name:
            print("‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º...")
            continue
        
        # –í—ã–±–∏—Ä–∞–µ–º —Ü–≤–µ—Ç
        color = COLORS[i % len(COLORS)]
        print(f"–¶–≤–µ—Ç –¥–ª—è –∫–∞–Ω–∞–ª–∞: {color}")
        
        try:
            # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ OAuth
            channel_info = setup_new_channel(name, 'config/client_secrets.json')
            channel_info['color'] = color
            channels_data.append(channel_info)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∫–∞–Ω–∞–ª–∞: {e}")
            print("–ü—Ä–æ–ø—É—Å–∫–∞–µ–º —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª...")
            continue
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
    if channels_data:
        print(f"\n{'=' * 60}")
        print("–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
        print('=' * 60)
        
        for i, ch_data in enumerate(channels_data, 1):
            channel_id = db.add_personal_channel(
                name=ch_data['name'],
                youtube_channel_id=ch_data['youtube_channel_id'],
                oauth_token_path=ch_data['token_file'],
                color=ch_data['color'],
                order_position=i
            )
            print(f"‚úì –ö–∞–Ω–∞–ª '{ch_data['name']}' –¥–æ–±–∞–≤–ª–µ–Ω (ID: {channel_id})")
        
        print("\n‚úÖ –í—Å–µ –∫–∞–Ω–∞–ª—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!")
        print("\n–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏. –ó–∞–ø—É—Å—Ç–∏—Ç–µ:")
        print("  python sync_subscriptions.py")
    else:
        print("\n‚ö†Ô∏è  –ù–∏ –æ–¥–∏–Ω –∫–∞–Ω–∞–ª –Ω–µ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω.")


def update_existing_channels(db: Database, channels: list):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–æ–∫ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–∞–Ω–∞–ª–æ–≤"""
    print("\n" + "=" * 60)
    print("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–æ–∫ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–∞–Ω–∞–ª–æ–≤")
    print("=" * 60)
    
    for channel in channels:
        print(f"\n--- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {channel['name']} ---")
        
        try:
            api = YouTubeAPI('config/client_secrets.json')
            api.authenticate(channel['oauth_token_path'])
            
            print("‚úì –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥–ø–∏—Å–∫–∏
            print("–ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫...")
            subscriptions = api.get_subscriptions()
            print(f"–ù–∞–π–¥–µ–Ω–æ {len(subscriptions)} –ø–æ–¥–ø–∏—Å–æ–∫")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
            for sub in subscriptions:
                db.add_subscription(
                    personal_channel_id=channel['id'],
                    youtube_channel_id=sub['channel_id'],
                    channel_name=sub['channel_name'],
                    channel_thumbnail=sub['thumbnail']
                )
            
            print(f"‚úì –ü–æ–¥–ø–∏—Å–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è '{channel['name']}'")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞ '{channel['name']}': {e}")
            continue
    
    print("\n‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")


if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        print("\n\n‚ö†Ô∏è  –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(0)
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)