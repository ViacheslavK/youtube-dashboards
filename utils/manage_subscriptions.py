#!/usr/bin/env python3
"""
–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏ (–ø—Ä–æ—Å–º–æ—Ç—Ä –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö, —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏)
"""

import sys
import os
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
current_dir = os.path.dirname(os.path.abspath(__file__))  # utils/
project_root = os.path.dirname(current_dir)  # –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞
sys.path.insert(0, project_root)

from src.db_manager import Database
from locales import t, load_locale_from_config

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ª–æ–∫–∞–ª—å –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
load_locale_from_config()


def view_inactive_subscriptions():
    """–ü–æ–∫–∞–∑–∞—Ç—å –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏"""
    db = Database()
    channels = db.get_all_personal_channels()
    
    print(f"\n{'=' * 80}")
    print("–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏ (–æ—Ç –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å)")
    print('=' * 80)
    
    total_inactive = 0
    
    for channel in channels:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ
        all_subs = db.get_subscriptions_by_channel(channel['id'], include_inactive=True)
        inactive_subs = [s for s in all_subs if not s['is_active']]
        
        if inactive_subs:
            print(f"\nüì∫ {channel['name']}: {len(inactive_subs)} –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö")
            
            for sub in inactive_subs:
                deactivated = datetime.fromisoformat(sub['deactivated_at']) if sub['deactivated_at'] else None
                time_str = deactivated.strftime('%Y-%m-%d') if deactivated else '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
                print(f"   [{sub['id']}] {sub['channel_name']} (—Å {time_str})")
            
            total_inactive += len(inactive_subs)
    
    if total_inactive == 0:
        print("\n‚úÖ –ù–µ—Ç –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫!")
    else:
        print(f"\n{'=' * 80}")
        print(f"–í—Å–µ–≥–æ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫: {total_inactive}")
        print("\n–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏: python manage_subscriptions.py --delete-inactive")
        print('=' * 80)


def delete_inactive_interactive():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫"""
    db = Database()
    channels = db.get_all_personal_channels()
    
    print(f"\n{'=' * 80}")
    print("–£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏")
    print('=' * 80)
    
    for channel in channels:
        all_subs = db.get_subscriptions_by_channel(channel['id'], include_inactive=True)
        inactive_subs = [s for s in all_subs if not s['is_active']]
        
        if not inactive_subs:
            continue
        
        print(f"\nüì∫ {channel['name']}: {len(inactive_subs)} –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö")
        
        for sub in inactive_subs:
            print(f"\n   –ö–∞–Ω–∞–ª: {sub['channel_name']}")
            print(f"   ID: {sub['id']}")
            
            choice = input("   –£–¥–∞–ª–∏—Ç—å –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏? (y/n/q –¥–ª—è –≤—ã—Ö–æ–¥–∞): ").strip().lower()
            
            if choice == 'q':
                print("\n‚ö†Ô∏è  –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
                return
            elif choice == 'y':
                db.mark_subscription_deleted(sub['id'])
                print("   ‚úì –£–¥–∞–ª–µ–Ω–æ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏")
            else:
                print("   ‚äò –ü—Ä–æ–ø—É—â–µ–Ω–æ")
    
    print(f"\n{'=' * 80}")
    print("‚úÖ –ì–æ—Ç–æ–≤–æ!")
    print('=' * 80)


def delete_all_inactive():
    """–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏"""
    db = Database()
    channels = db.get_all_personal_channels()
    
    total = 0
    
    for channel in channels:
        all_subs = db.get_subscriptions_by_channel(channel['id'], include_inactive=True)
        inactive_subs = [s for s in all_subs if not s['is_active']]
        
        for sub in inactive_subs:
            db.mark_subscription_deleted(sub['id'])
            total += 1
    
    print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏: {total} –ø–æ–¥–ø–∏—Å–æ–∫")


def view_statistics():
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–æ–¥–ø–∏—Å–∫–∞–º"""
    db = Database()
    channels = db.get_all_personal_channels()
    
    print(f"\n{'=' * 80}")
    print("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫")
    print('=' * 80)
    
    total_active = 0
    total_inactive = 0
    total_deleted = 0
    
    for channel in channels:
        all_subs = db.get_subscriptions_by_channel(channel['id'], include_inactive=True)
        
        active = len([s for s in all_subs if s['is_active']])
        inactive = len([s for s in all_subs if not s['is_active']])
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —É–¥–∞–ª—ë–Ω–Ω—ã–µ (—Ç—Ä–µ–±—É–µ—Ç –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞)
        conn = db.get_connection()
        cursor = conn.cursor()
        cursor.execute('''
            SELECT COUNT(*) as count FROM subscriptions 
            WHERE personal_channel_id = ? AND deleted_by_user = 1
        ''', (channel['id'],))
        deleted = cursor.fetchone()['count']
        conn.close()
        
        print(f"\nüì∫ {channel['name']}:")
        print(f"   –ê–∫—Ç–∏–≤–Ω—ã–µ: {active}")
        print(f"   –ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ (–≤ –∏—Å—Ç–æ—Ä–∏–∏): {inactive}")
        print(f"   –£–¥–∞–ª—ë–Ω–Ω—ã–µ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏: {deleted}")
        
        total_active += active
        total_inactive += inactive
        total_deleted += deleted
    
    print(f"\n{'=' * 80}")
    print(f"–í–°–ï–ì–û:")
    print(f"   –ê–∫—Ç–∏–≤–Ω—ã–µ: {total_active}")
    print(f"   –ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ: {total_inactive}")
    print(f"   –£–¥–∞–ª—ë–Ω–Ω—ã–µ: {total_deleted}")
    print('=' * 80)


def main():
    if len(sys.argv) > 1:
        if sys.argv[1] == '--delete-inactive':
            delete_all_inactive()
            return
    
    print("=" * 80)
    print("YouTube Dashboard - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏")
    print("=" * 80)
    
    print("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
    print("1. –ü—Ä–æ—Å–º–æ—Ç—Ä –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫")
    print("2. –£–¥–∞–ª–∏—Ç—å –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ (–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ)")
    print("3. –£–¥–∞–ª–∏—Ç—å –í–°–ï –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏")
    print("4. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫")
    print("5. –í—ã—Ö–æ–¥")
    
    choice = input("\n–í–∞—à –≤—ã–±–æ—Ä (1-5): ").strip()
    
    if choice == '1':
        view_inactive_subscriptions()
    elif choice == '2':
        delete_inactive_interactive()
    elif choice == '3':
        confirm = input("\n‚ö†Ô∏è  –£–¥–∞–ª–∏—Ç—å –í–°–ï –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏? (yes/no): ").strip().lower()
        if confirm == 'yes':
            delete_all_inactive()
        else:
            print("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ")
    elif choice == '4':
        view_statistics()
    elif choice == '5':
        pass
    else:
        print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä")


if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        print("\n\n‚ö†Ô∏è  –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(0)
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)